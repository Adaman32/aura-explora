(function (d3, topojson) {
  'use strict';

  const svg = d3.select('svg');

  const projection = d3.geoMercator ()
  		.center([0,67])
  		.scale(1800);

  const g =svg.append('g');

  svg.call(d3.zoom().scaleExtent([1,10]).on('zoom', () => {
    g.attr('transform',d3.event.transform);
  })
    );

  const pathGenerator = d3.geoPath().projection(projection);
  //https://gist.githubusercontent.com/HarisVidimlic/cd3ae6e9ca6a3211f89c1e75e34db6c8/raw/sverige.json = regions
  d3.json('https://gist.githubusercontent.com/HarisVidimlic/2ee03c97f981175a0e15aa297c4f2243/raw/gistfile1.json') //municipalities
  	.then(data => {
    	 console.log(data);
    	const SWE_adm2 = topojson.feature(data, data.objects.SWE_adm2);
       console.log(data);
    
    	g.selectAll('path').data(SWE_adm2.features)
    		.enter().append('path')
    		.attr('class','region')
    		.attr('d', pathGenerator)
    	.append ('title')
    		.text(d => (d.properties.NAME_2));
  });

  //change SWE_adm2 to SWE_adm1 if you want regions
  //Check properties.NAME_1/2 or what else is wanted.

}(d3, topojson));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbGVjdCwganNvbiwgZ2VvUGF0aCwgZ2VvTWVyY2F0b3IsIHpvb20sZXZlbnQgfSBmcm9tICdkMyc7IC8vZ2VvTWVyY2F0b3Igd29ya3MgZmluZSB0b29cbmltcG9ydCB7ZmVhdHVyZX0gZnJvbSAndG9wb2pzb24nO1xuY29uc3Qgc3ZnID0gc2VsZWN0KCdzdmcnKTtcblxuY29uc3QgcHJvamVjdGlvbiA9IGdlb01lcmNhdG9yICgpXG5cdFx0LmNlbnRlcihbMCw2N10pXG5cdFx0LnNjYWxlKDE4MDApXG5cbmNvbnN0IGcgPXN2Zy5hcHBlbmQoJ2cnKTtcbmNvbnN0IGhlaWdodCA9IDMwMDA7XG5jb25zdCB3aWR0aCA9IDMwMDA7XG5cbnN2Zy5jYWxsKHpvb20oKS5zY2FsZUV4dGVudChbMSwxMF0pLm9uKCd6b29tJywgKCkgPT4ge1xuICBnLmF0dHIoJ3RyYW5zZm9ybScsZXZlbnQudHJhbnNmb3JtKTtcbn0pXG4gICk7XG5cbmNvbnN0IHBhdGhHZW5lcmF0b3IgPSBnZW9QYXRoKCkucHJvamVjdGlvbihwcm9qZWN0aW9uKTtcbi8vaHR0cHM6Ly9naXN0LmdpdGh1YnVzZXJjb250ZW50LmNvbS9IYXJpc1ZpZGltbGljL2NkM2FlNmU5Y2E2YTMyMTFmODljMWU3NWUzNGRiNmM4L3Jhdy9zdmVyaWdlLmpzb24gPSByZWdpb25zXG5qc29uKCdodHRwczovL2dpc3QuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0hhcmlzVmlkaW1saWMvMmVlMDNjOTdmOTgxMTc1YTBlMTVhYTI5N2M0ZjIyNDMvcmF3L2dpc3RmaWxlMS5qc29uJykgLy9tdW5pY2lwYWxpdGllc1xuXHQudGhlbihkYXRhID0+IHtcbiAgXHQgY29uc29sZS5sb2coZGF0YSk7XG4gIFx0Y29uc3QgU1dFX2FkbTIgPSBmZWF0dXJlKGRhdGEsIGRhdGEub2JqZWN0cy5TV0VfYWRtMilcbiAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gIFxuICBcdGcuc2VsZWN0QWxsKCdwYXRoJykuZGF0YShTV0VfYWRtMi5mZWF0dXJlcylcbiAgXHRcdC5lbnRlcigpLmFwcGVuZCgncGF0aCcpXG4gIFx0XHQuYXR0cignY2xhc3MnLCdyZWdpb24nKVxuICBcdFx0LmF0dHIoJ2QnLCBwYXRoR2VuZXJhdG9yKVxuICBcdC5hcHBlbmQgKCd0aXRsZScpXG4gIFx0XHQudGV4dChkID0+IChkLnByb3BlcnRpZXMuTkFNRV8yKSk7XG59KTtcblxuLy9jaGFuZ2UgU1dFX2FkbTIgdG8gU1dFX2FkbTEgaWYgeW91IHdhbnQgcmVnaW9uc1xuLy9DaGVjayBwcm9wZXJ0aWVzLk5BTUVfMS8yIG9yIHdoYXQgZWxzZSBpcyB3YW50ZWQuXG5cblxuXG5cblxuXG4iXSwibmFtZXMiOlsic2VsZWN0IiwiZ2VvTWVyY2F0b3IiLCJ6b29tIiwiZXZlbnQiLCJnZW9QYXRoIiwianNvbiIsImZlYXR1cmUiXSwibWFwcGluZ3MiOiI7OztFQUVBLE1BQU0sR0FBRyxHQUFHQSxTQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDMUI7RUFDQSxNQUFNLFVBQVUsR0FBR0MsY0FBVyxHQUFHO0VBQ2pDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBQ2pCLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBQztBQUNkO0VBQ0EsTUFBTSxDQUFDLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUd6QjtFQUNBLEdBQUcsQ0FBQyxJQUFJLENBQUNDLE9BQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTTtFQUNyRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDQyxRQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7RUFDdEMsQ0FBQyxDQUFDO0VBQ0YsR0FBRyxDQUFDO0FBQ0o7RUFDQSxNQUFNLGFBQWEsR0FBR0MsVUFBTyxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0VBQ3ZEO0FBQ0FDLFNBQUksQ0FBQyxzR0FBc0csQ0FBQztFQUM1RyxFQUFFLElBQUksQ0FBQyxJQUFJLElBQUk7RUFDZixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDdEIsR0FBRyxNQUFNLFFBQVEsR0FBR0MsZ0JBQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUM7RUFDeEQsS0FBSyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQ3ZCO0VBQ0EsR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO0VBQzlDLEtBQUssS0FBSyxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztFQUMzQixLQUFLLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO0VBQzNCLEtBQUssSUFBSSxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUM7RUFDN0IsSUFBSSxNQUFNLEVBQUUsT0FBTyxDQUFDO0VBQ3BCLEtBQUssSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7RUFDdEMsQ0FBQyxDQUFDLENBQUM7QUFDSDtFQUNBO0VBQ0E7Ozs7In0=